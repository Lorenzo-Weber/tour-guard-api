"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const authConfig = {
    guard: 'web',
    guards: {
        web: {
            driver: 'session',
            provider: {
                driver: 'database',
                identifierKey: 'id',
                uids: ['email'],
                usersTable: 'users',
            },
        },
        api: {
            driver: 'oat',
            tokenProvider: {
                type: 'api',
                driver: 'database',
                table: 'api_tokens',
                foreignKey: 'user_id',
            },
            provider: {
                driver: 'database',
                identifierKey: 'id',
                uids: ['email'],
                usersTable: 'users',
            },
        },
    },
};
exports.default = authConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImF1dGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFrQkEsTUFBTSxVQUFVLEdBQWU7SUFDN0IsS0FBSyxFQUFFLEtBQUs7SUFDWixNQUFNLEVBQUU7UUFXTixHQUFHLEVBQUU7WUFDSCxNQUFNLEVBQUUsU0FBUztZQUVqQixRQUFRLEVBQUU7Z0JBU1IsTUFBTSxFQUFFLFVBQVU7Z0JBV2xCLGFBQWEsRUFBRSxJQUFJO2dCQVluQixJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUM7Z0JBV2YsVUFBVSxFQUFFLE9BQU87YUFDcEI7U0FDRjtRQWNELEdBQUcsRUFBRTtZQUNILE1BQU0sRUFBRSxLQUFLO1lBZWIsYUFBYSxFQUFFO2dCQUNiLElBQUksRUFBRSxLQUFLO2dCQUNYLE1BQU0sRUFBRSxVQUFVO2dCQUNsQixLQUFLLEVBQUUsWUFBWTtnQkFDbkIsVUFBVSxFQUFFLFNBQVM7YUFDdEI7WUFFRCxRQUFRLEVBQUU7Z0JBU1IsTUFBTSxFQUFFLFVBQVU7Z0JBV2xCLGFBQWEsRUFBRSxJQUFJO2dCQVluQixJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUM7Z0JBV2YsVUFBVSxFQUFFLE9BQU87YUFDcEI7U0FDRjtLQUNGO0NBQ0YsQ0FBQTtBQUVELGtCQUFlLFVBQVUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29uZmlnIHNvdXJjZTogaHR0cHM6Ly9naXQuaW8vSlkwbXBcbiAqXG4gKiBGZWVsIGZyZWUgdG8gbGV0IHVzIGtub3cgdmlhIFBSLCBpZiB5b3UgZmluZCBzb21ldGhpbmcgYnJva2VuIGluIHRoaXMgY29uZmlnXG4gKiBmaWxlLlxuICovXG5cbmltcG9ydCB0eXBlIHsgQXV0aENvbmZpZyB9IGZyb20gJ0Bpb2M6QWRvbmlzL0FkZG9ucy9BdXRoJ1xuXG4vKlxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58IEF1dGhlbnRpY2F0aW9uIE1hcHBpbmdcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufFxufCBMaXN0IG9mIGF2YWlsYWJsZSBhdXRoZW50aWNhdGlvbiBtYXBwaW5nLiBZb3UgbXVzdCBmaXJzdCBkZWZpbmUgdGhlbVxufCBpbnNpZGUgdGhlIGBjb250cmFjdHMvYXV0aC50c2AgZmlsZSBiZWZvcmUgbWVudGlvbmluZyB0aGVtIGhlcmUuXG58XG4qL1xuY29uc3QgYXV0aENvbmZpZzogQXV0aENvbmZpZyA9IHtcbiAgZ3VhcmQ6ICd3ZWInLFxuICBndWFyZHM6IHtcbiAgICAvKlxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHwgV2ViIEd1YXJkXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgfFxuICAgIHwgV2ViIGd1YXJkIHVzZXMgY2xhc3NpYyBvbGQgc2Nob29sIHNlc3Npb25zIGZvciBhdXRoZW50aWNhdGluZyB1c2Vycy5cbiAgICB8IElmIHlvdSBhcmUgYnVpbGRpbmcgYSBzdGFuZGFyZCB3ZWIgYXBwbGljYXRpb24sIGl0IGlzIHJlY29tbWVuZGVkIHRvXG4gICAgfCB1c2Ugd2ViIGd1YXJkIHdpdGggc2Vzc2lvbiBkcml2ZXJcbiAgICB8XG4gICAgKi9cbiAgICB3ZWI6IHtcbiAgICAgIGRyaXZlcjogJ3Nlc3Npb24nLFxuXG4gICAgICBwcm92aWRlcjoge1xuICAgICAgICAvKlxuICAgICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgfCBEcml2ZXJcbiAgICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIHxcbiAgICAgICAgfCBOYW1lIG9mIHRoZSBkcml2ZXJcbiAgICAgICAgfFxuICAgICAgICAqL1xuICAgICAgICBkcml2ZXI6ICdkYXRhYmFzZScsXG5cbiAgICAgICAgLypcbiAgICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIHwgSWRlbnRpZmllciBrZXlcbiAgICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIHxcbiAgICAgICAgfCBUaGUgaWRlbnRpZmllciBrZXkgaXMgdGhlIHVuaXF1ZSBrZXkgaW5zaWRlIHRoZSBkZWZpbmVkIGRhdGFiYXNlIHRhYmxlLlxuICAgICAgICB8IEluIG1vc3QgY2FzZXMgc3BlY2lmeWluZyB0aGUgcHJpbWFyeSBrZXkgaXMgdGhlIHJpZ2h0IGNob2ljZS5cbiAgICAgICAgfFxuICAgICAgICAqL1xuICAgICAgICBpZGVudGlmaWVyS2V5OiAnaWQnLFxuXG4gICAgICAgIC8qXG4gICAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICB8IFVpZHNcbiAgICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIHxcbiAgICAgICAgfCBVaWRzIGFyZSB1c2VkIHRvIHNlYXJjaCBhIHVzZXIgYWdhaW5zdCBvbmUgb2YgdGhlIG1lbnRpb25lZCBjb2x1bW5zLiBEdXJpbmdcbiAgICAgICAgfCBsb2dpbiwgdGhlIGF1dGggbW9kdWxlIHdpbGwgc2VhcmNoIHRoZSB1c2VyIG1lbnRpb25lZCB2YWx1ZSBhZ2FpbnN0IG9uZVxuICAgICAgICB8IG9mIHRoZSBtZW50aW9uZWQgY29sdW1ucyB0byBmaW5kIHRoZWlyIHVzZXIgcmVjb3JkLlxuICAgICAgICB8XG4gICAgICAgICovXG4gICAgICAgIHVpZHM6IFsnZW1haWwnXSxcblxuICAgICAgICAvKlxuICAgICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgfCBEYXRhYmFzZSB0YWJsZVxuICAgICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgfFxuICAgICAgICB8IFRoZSBkYXRhYmFzZSB0YWJsZSB0byBxdWVyeS4gTWFrZSBzdXJlIHRoZSBkYXRhYmFzZSB0YWJsZSBoYXMgYSBgcGFzc3dvcmRgXG4gICAgICAgIHwgZmllbGQgYW5kIGByZW1lbWJlcl9tZV90b2tlbmAgY29sdW1uLlxuICAgICAgICB8XG4gICAgICAgICovXG4gICAgICAgIHVzZXJzVGFibGU6ICd1c2VycycsXG4gICAgICB9LFxuICAgIH0sXG4gICAgLypcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB8IE9BVCBHdWFyZFxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHxcbiAgICB8IE9BVCAoT3BhcXVlIGFjY2VzcyB0b2tlbnMpIGd1YXJkIHVzZXMgZGF0YWJhc2UgYmFja2VkIHRva2VucyB0byBhdXRoZW50aWNhdGVcbiAgICB8IEhUVFAgcmVxdWVzdC4gVGhpcyBndWFyZCBET0VTIE5PVCByZWx5IG9uIHNlc3Npb25zIG9yIGNvb2tpZXMgYW5kIHVzZXNcbiAgICB8IEF1dGhvcml6YXRpb24gaGVhZGVyIHZhbHVlIGZvciBhdXRoZW50aWNhdGlvbi5cbiAgICB8XG4gICAgfCBVc2UgdGhpcyBndWFyZCB0byBhdXRoZW50aWNhdGUgbW9iaWxlIGFwcHMgb3Igd2ViIGNsaWVudHMgdGhhdCBjYW5ub3QgcmVseVxuICAgIHwgb24gY29va2llcy9zZXNzaW9ucy5cbiAgICB8XG4gICAgKi9cbiAgICBhcGk6IHtcbiAgICAgIGRyaXZlcjogJ29hdCcsXG5cbiAgICAgIC8qXG4gICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgIHwgVG9rZW5zIHByb3ZpZGVyXG4gICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgIHxcbiAgICAgIHwgVXNlcyBTUUwgZGF0YWJhc2UgZm9yIG1hbmFnaW5nIHRva2Vucy4gVXNlIHRoZSBcImRhdGFiYXNlXCIgZHJpdmVyLCB3aGVuXG4gICAgICB8IHRva2VucyBhcmUgdGhlIHNlY29uZGFyeSBtb2RlIG9mIGF1dGhlbnRpY2F0aW9uLlxuICAgICAgfCBGb3IgZXhhbXBsZTogVGhlIEdpdGh1YiBwZXJzb25hbCB0b2tlbnNcbiAgICAgIHxcbiAgICAgIHwgVGhlIGZvcmVpZ25LZXkgY29sdW1uIGlzIHVzZWQgdG8gbWFrZSB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIHVzZXJcbiAgICAgIHwgYW5kIHRoZSB0b2tlbi4gWW91IGFyZSBmcmVlIHRvIHVzZSBhbnkgY29sdW1uIG5hbWUgaGVyZS5cbiAgICAgIHxcbiAgICAgICovXG4gICAgICB0b2tlblByb3ZpZGVyOiB7XG4gICAgICAgIHR5cGU6ICdhcGknLFxuICAgICAgICBkcml2ZXI6ICdkYXRhYmFzZScsXG4gICAgICAgIHRhYmxlOiAnYXBpX3Rva2VucycsXG4gICAgICAgIGZvcmVpZ25LZXk6ICd1c2VyX2lkJyxcbiAgICAgIH0sXG5cbiAgICAgIHByb3ZpZGVyOiB7XG4gICAgICAgIC8qXG4gICAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICB8IERyaXZlclxuICAgICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgfFxuICAgICAgICB8IE5hbWUgb2YgdGhlIGRyaXZlclxuICAgICAgICB8XG4gICAgICAgICovXG4gICAgICAgIGRyaXZlcjogJ2RhdGFiYXNlJyxcblxuICAgICAgICAvKlxuICAgICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgfCBJZGVudGlmaWVyIGtleVxuICAgICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgfFxuICAgICAgICB8IFRoZSBpZGVudGlmaWVyIGtleSBpcyB0aGUgdW5pcXVlIGtleSBpbnNpZGUgdGhlIGRlZmluZWQgZGF0YWJhc2UgdGFibGUuXG4gICAgICAgIHwgSW4gbW9zdCBjYXNlcyBzcGVjaWZ5aW5nIHRoZSBwcmltYXJ5IGtleSBpcyB0aGUgcmlnaHQgY2hvaWNlLlxuICAgICAgICB8XG4gICAgICAgICovXG4gICAgICAgIGlkZW50aWZpZXJLZXk6ICdpZCcsXG5cbiAgICAgICAgLypcbiAgICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIHwgVWlkc1xuICAgICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgfFxuICAgICAgICB8IFVpZHMgYXJlIHVzZWQgdG8gc2VhcmNoIGEgdXNlciBhZ2FpbnN0IG9uZSBvZiB0aGUgbWVudGlvbmVkIGNvbHVtbnMuIER1cmluZ1xuICAgICAgICB8IGxvZ2luLCB0aGUgYXV0aCBtb2R1bGUgd2lsbCBzZWFyY2ggdGhlIHVzZXIgbWVudGlvbmVkIHZhbHVlIGFnYWluc3Qgb25lXG4gICAgICAgIHwgb2YgdGhlIG1lbnRpb25lZCBjb2x1bW5zIHRvIGZpbmQgdGhlaXIgdXNlciByZWNvcmQuXG4gICAgICAgIHxcbiAgICAgICAgKi9cbiAgICAgICAgdWlkczogWydlbWFpbCddLFxuXG4gICAgICAgIC8qXG4gICAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICB8IERhdGFiYXNlIHRhYmxlXG4gICAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICB8XG4gICAgICAgIHwgVGhlIGRhdGFiYXNlIHRhYmxlIHRvIHF1ZXJ5LiBNYWtlIHN1cmUgdGhlIGRhdGFiYXNlIHRhYmxlIGhhcyBhIGBwYXNzd29yZGBcbiAgICAgICAgfCBmaWVsZCBhbmQgYHJlbWVtYmVyX21lX3Rva2VuYCBjb2x1bW4uXG4gICAgICAgIHxcbiAgICAgICAgKi9cbiAgICAgICAgdXNlcnNUYWJsZTogJ3VzZXJzJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXV0aENvbmZpZyJdfQ==